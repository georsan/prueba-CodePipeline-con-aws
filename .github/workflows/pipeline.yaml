name: SAM Pipeline

on:
  push:
    branches:
      - 'main'
      - 'feature*'

env:
  SAM_TEMPLATES: |
    microservice2: microservice2/template.yaml
  TESTING_ARTIFACTS_BUCKET: testing-artifacts-bucket
  PROD_ARTIFACTS_BUCKET: prod-artifacts-bucket
  TESTING_REGION: us-east-1
  PROD_REGION: us-east-1

jobs:
  deploy-testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        microservice: ['microservice1', 'microservice2']
    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SAM CLI
        run: |
          pip install aws-sam-cli

      - name: Build microservice
        run: |
          cd microservice1
          sam build --template template.yaml

      - name: Deploy to testing environment
        run: |
          cd microservice2
          sam deploy --stack-name ${{ matrix.microservice }}-testing \
            --template template.yaml \
            --capabilities CAPABILITY_IAM \
            --region ${{ env.TESTING_REGION }} \
            --s3-bucket ${{ env.TESTING_ARTIFACTS_BUCKET }} \
            --no-fail-on-empty-changeset


  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        microservice: ['microservice2']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to production environment
        run: |
          sam build --template ${{ env.SAM_TEMPLATES[ matrix.microservice ] }}
          sam deploy --stack-name ${{ matrix.microservice }}-prod \
            --template ${{ env.SAM_TEMPLATES[ matrix.microservice ] }} \
            --capabilities CAPABILITY_IAM \
            --region ${{ env.PROD_REGION }} \
            --s3-bucket ${{ env.PROD_ARTIFACTS_BUCKET }} \
            --no-fail-on-empty-changeset



